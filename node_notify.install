<?php

/**
 * Implements hook_install().
 */
function node_notify_install () {
  $weight = (int) db_select('system', 's')
    ->fields('s', array('weight'))
    ->condition('name', 'comment_notify')
    ->condition('type', 'module')
    ->execute()
    ->fetchColumn();

  db_update('system')
    ->condition('name', 'node_notify')
    ->condition('type', 'module')
    ->fields(array('weight' => $weight + 1))
    ->execute();
}

/**
 * Implements hook_install().
 */
function node_notify_uninstall () {
  db_delete('variable')->condition('name', 'node_notify%', 'LIKE')->execute();
}

/**
 * Implements hook_schema().
 */
function node_notify_schema () {
  $schema = array();

  $schema['node_notify_subscription'] = array(
    'description' => 'Node subscriptions.',
    'fields' => array(
      'sid' => array(
        'description' => 'Subscription identified.',
        'type' => 'serial',
        'unsinged' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'References {node}.nid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'References {user}.uid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'email' => array(
        'description' => 'Email address for anonymous user subscription.',
        'type' => 'varchar',
        'length' => 150,
        'default' => '',
      ),
      // 'type' => array(
      //   'description' => 'Subscription type.',
      //   'type' => 'int',
      //   'size' => 'small',
      //   'not null' => TRUE,
      //   'default' => 0,
      // ),
      'enabled' => array(
        'description' => 'Is subscription active?',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'token' => array(
        'description' => 'Token.',
        'type' => 'varchar',
        'length' => 43,
        'not null' => TRUE,
      ),
      'subscribed_on' => array(
        'description' => 'Timestamp of subscription.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array(
      'token' => array('token'),
      'user_email_node' => array('uid', 'email', 'nid'),
    ),
    'foreign keys' => array(
      'subscribed_node' => array(
        'table' => 'node', 'columns' => array('nid' => 'nid'),
      ),
      'subscribed_user' => array(
        'table' => 'user', 'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  $schema['node_notify_notification'] = array(
    'description' => 'Comment notifications.',
    'fields' => array(
      'sid' => array(
        'description' => 'References {node_notify_subscription}.sid.',
        'type' => 'int',
        'unsinged' => TRUE,
        'not null' => TRUE,
      ),
      'cid' => array(
        'description' => 'References {comment}.cid.',
        'type' => 'int',
        'unsinged' => TRUE,
        'not null' => TRUE,
      ),
      'notified' => array(
        'description' => 'Is notification already sent?',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('sid', 'cid'),
    'foreign keys' => array(
      'subscription' => array(
        'table' => 'node_notify_subscription',
        'columns' => array('sid' => 'sid'),
      ),
      'comment' => array(
        'table' => 'comment',
        'columns' => array('cid' => 'cid'),
      ),
    ),
  );

  return $schema;
}

function node_notify_update_7001 () {
  $schema = node_notify_schema();
  foreach ($schema as $table => $def) {
    db_create_table($table, $def);
  }
  return 'Created schema tables for Node Notify';
}

function node_notify_update_7002 () {
  db_add_field('node_notify_subscription', 'subscribed_on', array(
    'description' => 'Timestamp of subscription.',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
  ));
  return 'Added timestamp field "subscribed" to table {node_notify_subscription}';
}